{"ast":null,"code":"function repeat(count, self) {\n  if (self.repeat) {\n    return self.repeat(count);\n  }\n\n  if (self.length == 0 || count == 0) {\n    return '';\n  } // Ensuring count is a 31-bit integer allows us to heavily optimize the\n  // main part. But anyway, most current (August 2014) browsers can't handle\n  // strings 1 << 28 chars or longer, so:\n\n\n  if (self.length * count >= 1 << 28) {\n    throw new RangeError('repeat count must not overflow maximum string size');\n  }\n\n  var rpt = '';\n\n  for (;;) {\n    if ((count & 1) == 1) {\n      rpt += self;\n    }\n\n    count >>>= 1;\n\n    if (count == 0) {\n      break;\n    }\n\n    self += self;\n  }\n\n  return rpt;\n}\n\n;\nexport { repeat };\n/* No side effect */","map":{"version":3,"sources":["/Users/bg/benzguo/memopub/node_modules/bs-platform/lib/es6/caml_utils.js"],"names":["repeat","count","self","length","RangeError","rpt"],"mappings":"AAGA,SAASA,MAAT,CAAiBC,KAAjB,EAAuBC,IAAvB,EAA4B;AACxB,MAAIA,IAAI,CAACF,MAAT,EAAgB;AACZ,WAAOE,IAAI,CAACF,MAAL,CAAYC,KAAZ,CAAP;AACH;;AACD,MAAIC,IAAI,CAACC,MAAL,IAAe,CAAf,IAAoBF,KAAK,IAAI,CAAjC,EAAoC;AAC5B,WAAO,EAAP;AACH,GANmB,CAOxB;AACA;AACA;;;AACA,MAAIC,IAAI,CAACC,MAAL,GAAcF,KAAd,IAAuB,KAAK,EAAhC,EAAoC;AAC5B,UAAM,IAAIG,UAAJ,CAAe,oDAAf,CAAN;AACP;;AACD,MAAIC,GAAG,GAAG,EAAV;;AACA,WAAS;AACD,QAAI,CAACJ,KAAK,GAAG,CAAT,KAAe,CAAnB,EAAsB;AAClBI,MAAAA,GAAG,IAAIH,IAAP;AACH;;AACDD,IAAAA,KAAK,MAAM,CAAX;;AACA,QAAIA,KAAK,IAAI,CAAb,EAAgB;AACZ;AACH;;AACDC,IAAAA,IAAI,IAAIA,IAAR;AACP;;AACD,SAAOG,GAAP;AAEH;;AAAA;AAED,SACEL,MADF;AAIA","sourcesContent":["\n\n\nfunction repeat (count,self){\n    if (self.repeat){\n        return self.repeat(count)\n    }\n    if (self.length == 0 || count == 0) {\n            return '';\n        }\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\n    // main part. But anyway, most current (August 2014) browsers can't handle\n    // strings 1 << 28 chars or longer, so:\n    if (self.length * count >= 1 << 28) {\n            throw new RangeError('repeat count must not overflow maximum string size');\n    }\n    var rpt = '';\n    for (;;) {\n            if ((count & 1) == 1) {\n                rpt += self;\n            }\n            count >>>= 1;\n            if (count == 0) {\n                break;\n            }\n            self += self;\n    }\n    return rpt;\n\n};\n\nexport {\n  repeat ,\n  \n}\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}