{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction caml_sys_getenv(s) {\n  if (typeof process === \"undefined\" || process.env === undefined) {\n    throw Caml_builtin_exceptions.not_found;\n  } else {\n    var match = process.env[s];\n\n    if (match !== undefined) {\n      return match;\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  }\n}\n\nfunction caml_sys_time(param) {\n  if (typeof process === \"undefined\" || process.uptime === undefined) {\n    return -1;\n  } else {\n    return process.uptime();\n  }\n}\n\nfunction caml_sys_random_seed(param) {\n  return (\n    /* array */\n    [((_Date$now() | 0) ^ 4294967295) * Math.random() | 0]\n  );\n}\n\nfunction caml_sys_system_command(_cmd) {\n  return 127;\n}\n\nfunction caml_sys_getcwd(param) {\n  if (typeof process === \"undefined\") {\n    return \"/\";\n  } else {\n    return process.cwd();\n  }\n}\n\nfunction caml_sys_get_argv(param) {\n  if (typeof process === \"undefined\") {\n    return (\n      /* tuple */\n      [\"\",\n      /* array */\n      [\"\"]]\n    );\n  } else {\n    var argv = process.argv;\n\n    if (argv == null) {\n      return (\n        /* tuple */\n        [\"\",\n        /* array */\n        [\"\"]]\n      );\n    } else {\n      return (\n        /* tuple */\n        [argv[0], argv]\n      );\n    }\n  }\n}\n\nfunction caml_sys_exit(exit_code) {\n  if (typeof process !== \"undefined\") {\n    return process.exit(exit_code);\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_sys_is_directory(_s) {\n  throw [Caml_builtin_exceptions.failure, \"caml_sys_is_directory not implemented\"];\n}\n\nfunction caml_sys_file_exists(_s) {\n  throw [Caml_builtin_exceptions.failure, \"caml_sys_file_exists not implemented\"];\n}\n\nexport { caml_sys_getenv, caml_sys_time, caml_sys_random_seed, caml_sys_system_command, caml_sys_getcwd, caml_sys_get_argv, caml_sys_exit, caml_sys_is_directory, caml_sys_file_exists };\n/* No side effect */","map":{"version":3,"sources":["/Users/bg/benzguo/memopub/node_modules/bs-platform/lib/es6/caml_sys.js"],"names":["Caml_builtin_exceptions","caml_sys_getenv","s","process","env","undefined","not_found","match","caml_sys_time","param","uptime","caml_sys_random_seed","Math","random","caml_sys_system_command","_cmd","caml_sys_getcwd","cwd","caml_sys_get_argv","argv","caml_sys_exit","exit_code","exit","caml_sys_is_directory","_s","failure","caml_sys_file_exists"],"mappings":";AAEA,OAAO,KAAKA,uBAAZ,MAAyC,8BAAzC;;AAEA,SAASC,eAAT,CAAyBC,CAAzB,EAA4B;AAC1B,MAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAmCA,OAAO,CAACC,GAAT,KAAkBC,SAAxD,EAAmE;AACjE,UAAML,uBAAuB,CAACM,SAA9B;AACD,GAFD,MAEO;AACL,QAAIC,KAAK,GAAIJ,OAAO,CAACC,GAAT,CAAcF,CAAd,CAAZ;;AACA,QAAIK,KAAK,KAAKF,SAAd,EAAyB;AACvB,aAAOE,KAAP;AACD,KAFD,MAEO;AACL,YAAMP,uBAAuB,CAACM,SAA9B;AACD;AACF;AACF;;AAED,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAI,OAAON,OAAP,KAAmB,WAAnB,IAAmCA,OAAO,CAACO,MAAT,KAAqBL,SAA3D,EAAsE;AACpE,WAAO,CAAC,CAAR;AACD,GAFD,MAEO;AACL,WAAOF,OAAO,CAACO,MAAR,EAAP;AACD;AACF;;AAED,SAASC,oBAAT,CAA8BF,KAA9B,EAAqC;AACnC;AAAO;AAAW,KAAC,CAAC,CAAC,cAAa,CAAd,IAAmB,UAApB,IAAkCG,IAAI,CAACC,MAAL,EAAlC,GAAkD,CAAnD;AAAlB;AACD;;AAED,SAASC,uBAAT,CAAiCC,IAAjC,EAAuC;AACrC,SAAO,GAAP;AACD;;AAED,SAASC,eAAT,CAAyBP,KAAzB,EAAgC;AAC9B,MAAI,OAAON,OAAP,KAAmB,WAAvB,EAAoC;AAClC,WAAO,GAAP;AACD,GAFD,MAEO;AACL,WAAOA,OAAO,CAACc,GAAR,EAAP;AACD;AACF;;AAED,SAASC,iBAAT,CAA2BT,KAA3B,EAAkC;AAChC,MAAI,OAAON,OAAP,KAAmB,WAAvB,EAAoC;AAClC;AAAO;AAAW,OACV,EADU;AAEV;AAAW,OAAC,EAAD,CAFD;AAAlB;AAID,GALD,MAKO;AACL,QAAIgB,IAAI,GAAIhB,OAAO,CAACgB,IAApB;;AACA,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB;AAAO;AAAW,SACV,EADU;AAEV;AAAW,SAAC,EAAD,CAFD;AAAlB;AAID,KALD,MAKO;AACL;AAAO;AAAW,SACVA,IAAI,CAAC,CAAD,CADM,EAEVA,IAFU;AAAlB;AAID;AACF;AACF;;AAED,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAChC,MAAI,OAAOlB,OAAP,KAAmB,WAAvB,EAAoC;AAClC,WAAOA,OAAO,CAACmB,IAAR,CAAaD,SAAb,CAAP;AACD,GAFD,MAEO;AACL,WAAO,CAAP;AACD;AACF;;AAED,SAASE,qBAAT,CAA+BC,EAA/B,EAAmC;AACjC,QAAM,CACAxB,uBAAuB,CAACyB,OADxB,EAEA,uCAFA,CAAN;AAID;;AAED,SAASC,oBAAT,CAA8BF,EAA9B,EAAkC;AAChC,QAAM,CACAxB,uBAAuB,CAACyB,OADxB,EAEA,sCAFA,CAAN;AAID;;AAED,SACExB,eADF,EAEEO,aAFF,EAGEG,oBAHF,EAIEG,uBAJF,EAKEE,eALF,EAMEE,iBANF,EAOEE,aAPF,EAQEG,qBARF,EASEG,oBATF;AAYA","sourcesContent":["\n\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction caml_sys_getenv(s) {\n  if (typeof process === \"undefined\" || (process.env) === undefined) {\n    throw Caml_builtin_exceptions.not_found;\n  } else {\n    var match = (process.env)[s];\n    if (match !== undefined) {\n      return match;\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  }\n}\n\nfunction caml_sys_time(param) {\n  if (typeof process === \"undefined\" || (process.uptime) === undefined) {\n    return -1;\n  } else {\n    return process.uptime();\n  }\n}\n\nfunction caml_sys_random_seed(param) {\n  return /* array */[((Date.now() | 0) ^ 4294967295) * Math.random() | 0];\n}\n\nfunction caml_sys_system_command(_cmd) {\n  return 127;\n}\n\nfunction caml_sys_getcwd(param) {\n  if (typeof process === \"undefined\") {\n    return \"/\";\n  } else {\n    return process.cwd();\n  }\n}\n\nfunction caml_sys_get_argv(param) {\n  if (typeof process === \"undefined\") {\n    return /* tuple */[\n            \"\",\n            /* array */[\"\"]\n          ];\n  } else {\n    var argv = (process.argv);\n    if (argv == null) {\n      return /* tuple */[\n              \"\",\n              /* array */[\"\"]\n            ];\n    } else {\n      return /* tuple */[\n              argv[0],\n              argv\n            ];\n    }\n  }\n}\n\nfunction caml_sys_exit(exit_code) {\n  if (typeof process !== \"undefined\") {\n    return process.exit(exit_code);\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_sys_is_directory(_s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_is_directory not implemented\"\n      ];\n}\n\nfunction caml_sys_file_exists(_s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_file_exists not implemented\"\n      ];\n}\n\nexport {\n  caml_sys_getenv ,\n  caml_sys_time ,\n  caml_sys_random_seed ,\n  caml_sys_system_command ,\n  caml_sys_getcwd ,\n  caml_sys_get_argv ,\n  caml_sys_exit ,\n  caml_sys_is_directory ,\n  caml_sys_file_exists ,\n  \n}\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}