{"ast":null,"code":"import * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction caml_string_get(s, i) {\n  if (i >= s.length || i < 0) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"index out of bounds\"];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nfunction caml_string_get16(s, i) {\n  return s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0;\n}\n\nfunction caml_string_get32(s, i) {\n  return ((s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0) + (s.charCodeAt(i + 2 | 0) << 16) | 0) + (s.charCodeAt(i + 3 | 0) << 24) | 0;\n}\n\nfunction get(s, i) {\n  if (i < 0 || i >= s.length) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"index out of bounds\"];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nexport { caml_string_get, caml_string_get16, caml_string_get32, get };\n/* No side effect */","map":{"version":3,"sources":["/Users/bg/benzguo/memopub/node_modules/bs-platform/lib/es6/caml_string.js"],"names":["Caml_builtin_exceptions","caml_string_get","s","i","length","invalid_argument","charCodeAt","caml_string_get16","caml_string_get32","get"],"mappings":"AAEA,OAAO,KAAKA,uBAAZ,MAAyC,8BAAzC;;AAEA,SAASC,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+B;AAC7B,MAAIA,CAAC,IAAID,CAAC,CAACE,MAAP,IAAiBD,CAAC,GAAG,CAAzB,EAA4B;AAC1B,UAAM,CACAH,uBAAuB,CAACK,gBADxB,EAEA,qBAFA,CAAN;AAID,GALD,MAKO;AACL,WAAOH,CAAC,CAACI,UAAF,CAAaH,CAAb,CAAP;AACD;AACF;;AAED,SAASI,iBAAT,CAA2BL,CAA3B,EAA8BC,CAA9B,EAAiC;AAC/B,SAAOD,CAAC,CAACI,UAAF,CAAaH,CAAb,KAAmBD,CAAC,CAACI,UAAF,CAAaH,CAAC,GAAG,CAAJ,GAAQ,CAArB,KAA2B,CAA9C,IAAmD,CAA1D;AACD;;AAED,SAASK,iBAAT,CAA2BN,CAA3B,EAA8BC,CAA9B,EAAiC;AAC/B,SAAO,CAAC,CAACD,CAAC,CAACI,UAAF,CAAaH,CAAb,KAAmBD,CAAC,CAACI,UAAF,CAAaH,CAAC,GAAG,CAAJ,GAAQ,CAArB,KAA2B,CAA9C,IAAmD,CAApD,KAA0DD,CAAC,CAACI,UAAF,CAAaH,CAAC,GAAG,CAAJ,GAAQ,CAArB,KAA2B,EAArF,IAA2F,CAA5F,KAAkGD,CAAC,CAACI,UAAF,CAAaH,CAAC,GAAG,CAAJ,GAAQ,CAArB,KAA2B,EAA7H,IAAmI,CAA1I;AACD;;AAED,SAASM,GAAT,CAAaP,CAAb,EAAgBC,CAAhB,EAAmB;AACjB,MAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAID,CAAC,CAACE,MAApB,EAA4B;AAC1B,UAAM,CACAJ,uBAAuB,CAACK,gBADxB,EAEA,qBAFA,CAAN;AAID,GALD,MAKO;AACL,WAAOH,CAAC,CAACI,UAAF,CAAaH,CAAb,CAAP;AACD;AACF;;AAED,SACEF,eADF,EAEEM,iBAFF,EAGEC,iBAHF,EAIEC,GAJF;AAOA","sourcesContent":["\n\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction caml_string_get(s, i) {\n  if (i >= s.length || i < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nfunction caml_string_get16(s, i) {\n  return s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0;\n}\n\nfunction caml_string_get32(s, i) {\n  return ((s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0) + (s.charCodeAt(i + 2 | 0) << 16) | 0) + (s.charCodeAt(i + 3 | 0) << 24) | 0;\n}\n\nfunction get(s, i) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nexport {\n  caml_string_get ,\n  caml_string_get16 ,\n  caml_string_get32 ,\n  get ,\n  \n}\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}