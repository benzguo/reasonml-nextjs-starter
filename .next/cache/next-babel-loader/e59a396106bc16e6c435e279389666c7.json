{"ast":null,"code":"import * as Block from \"./block.js\";\n\nfunction erase_rel(param) {\n  if (typeof param === \"number\") {\n    return (\n      /* End_of_fmtty */\n      0\n    );\n  } else {\n    switch (param.tag | 0) {\n      case 0:\n        return (\n          /* Char_ty */\n          Block.__(0, [erase_rel(param[0])])\n        );\n\n      case 1:\n        return (\n          /* String_ty */\n          Block.__(1, [erase_rel(param[0])])\n        );\n\n      case 2:\n        return (\n          /* Int_ty */\n          Block.__(2, [erase_rel(param[0])])\n        );\n\n      case 3:\n        return (\n          /* Int32_ty */\n          Block.__(3, [erase_rel(param[0])])\n        );\n\n      case 4:\n        return (\n          /* Nativeint_ty */\n          Block.__(4, [erase_rel(param[0])])\n        );\n\n      case 5:\n        return (\n          /* Int64_ty */\n          Block.__(5, [erase_rel(param[0])])\n        );\n\n      case 6:\n        return (\n          /* Float_ty */\n          Block.__(6, [erase_rel(param[0])])\n        );\n\n      case 7:\n        return (\n          /* Bool_ty */\n          Block.__(7, [erase_rel(param[0])])\n        );\n\n      case 8:\n        return (\n          /* Format_arg_ty */\n          Block.__(8, [param[0], erase_rel(param[1])])\n        );\n\n      case 9:\n        var ty1 = param[0];\n        return (\n          /* Format_subst_ty */\n          Block.__(9, [ty1, ty1, erase_rel(param[2])])\n        );\n\n      case 10:\n        return (\n          /* Alpha_ty */\n          Block.__(10, [erase_rel(param[0])])\n        );\n\n      case 11:\n        return (\n          /* Theta_ty */\n          Block.__(11, [erase_rel(param[0])])\n        );\n\n      case 12:\n        return (\n          /* Any_ty */\n          Block.__(12, [erase_rel(param[0])])\n        );\n\n      case 13:\n        return (\n          /* Reader_ty */\n          Block.__(13, [erase_rel(param[0])])\n        );\n\n      case 14:\n        return (\n          /* Ignored_reader_ty */\n          Block.__(14, [erase_rel(param[0])])\n        );\n    }\n  }\n}\n\nfunction concat_fmtty(fmtty1, fmtty2) {\n  if (typeof fmtty1 === \"number\") {\n    return fmtty2;\n  } else {\n    switch (fmtty1.tag | 0) {\n      case 0:\n        return (\n          /* Char_ty */\n          Block.__(0, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 1:\n        return (\n          /* String_ty */\n          Block.__(1, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 2:\n        return (\n          /* Int_ty */\n          Block.__(2, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 3:\n        return (\n          /* Int32_ty */\n          Block.__(3, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 4:\n        return (\n          /* Nativeint_ty */\n          Block.__(4, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 5:\n        return (\n          /* Int64_ty */\n          Block.__(5, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 6:\n        return (\n          /* Float_ty */\n          Block.__(6, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 7:\n        return (\n          /* Bool_ty */\n          Block.__(7, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 8:\n        return (\n          /* Format_arg_ty */\n          Block.__(8, [fmtty1[0], concat_fmtty(fmtty1[1], fmtty2)])\n        );\n\n      case 9:\n        return (\n          /* Format_subst_ty */\n          Block.__(9, [fmtty1[0], fmtty1[1], concat_fmtty(fmtty1[2], fmtty2)])\n        );\n\n      case 10:\n        return (\n          /* Alpha_ty */\n          Block.__(10, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 11:\n        return (\n          /* Theta_ty */\n          Block.__(11, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 12:\n        return (\n          /* Any_ty */\n          Block.__(12, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 13:\n        return (\n          /* Reader_ty */\n          Block.__(13, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n\n      case 14:\n        return (\n          /* Ignored_reader_ty */\n          Block.__(14, [concat_fmtty(fmtty1[0], fmtty2)])\n        );\n    }\n  }\n}\n\nfunction concat_fmt(fmt1, fmt2) {\n  if (typeof fmt1 === \"number\") {\n    return fmt2;\n  } else {\n    switch (fmt1.tag | 0) {\n      case 0:\n        return (\n          /* Char */\n          Block.__(0, [concat_fmt(fmt1[0], fmt2)])\n        );\n\n      case 1:\n        return (\n          /* Caml_char */\n          Block.__(1, [concat_fmt(fmt1[0], fmt2)])\n        );\n\n      case 2:\n        return (\n          /* String */\n          Block.__(2, [fmt1[0], concat_fmt(fmt1[1], fmt2)])\n        );\n\n      case 3:\n        return (\n          /* Caml_string */\n          Block.__(3, [fmt1[0], concat_fmt(fmt1[1], fmt2)])\n        );\n\n      case 4:\n        return (\n          /* Int */\n          Block.__(4, [fmt1[0], fmt1[1], fmt1[2], concat_fmt(fmt1[3], fmt2)])\n        );\n\n      case 5:\n        return (\n          /* Int32 */\n          Block.__(5, [fmt1[0], fmt1[1], fmt1[2], concat_fmt(fmt1[3], fmt2)])\n        );\n\n      case 6:\n        return (\n          /* Nativeint */\n          Block.__(6, [fmt1[0], fmt1[1], fmt1[2], concat_fmt(fmt1[3], fmt2)])\n        );\n\n      case 7:\n        return (\n          /* Int64 */\n          Block.__(7, [fmt1[0], fmt1[1], fmt1[2], concat_fmt(fmt1[3], fmt2)])\n        );\n\n      case 8:\n        return (\n          /* Float */\n          Block.__(8, [fmt1[0], fmt1[1], fmt1[2], concat_fmt(fmt1[3], fmt2)])\n        );\n\n      case 9:\n        return (\n          /* Bool */\n          Block.__(9, [concat_fmt(fmt1[0], fmt2)])\n        );\n\n      case 10:\n        return (\n          /* Flush */\n          Block.__(10, [concat_fmt(fmt1[0], fmt2)])\n        );\n\n      case 11:\n        return (\n          /* String_literal */\n          Block.__(11, [fmt1[0], concat_fmt(fmt1[1], fmt2)])\n        );\n\n      case 12:\n        return (\n          /* Char_literal */\n          Block.__(12, [fmt1[0], concat_fmt(fmt1[1], fmt2)])\n        );\n\n      case 13:\n        return (\n          /* Format_arg */\n          Block.__(13, [fmt1[0], fmt1[1], concat_fmt(fmt1[2], fmt2)])\n        );\n\n      case 14:\n        return (\n          /* Format_subst */\n          Block.__(14, [fmt1[0], fmt1[1], concat_fmt(fmt1[2], fmt2)])\n        );\n\n      case 15:\n        return (\n          /* Alpha */\n          Block.__(15, [concat_fmt(fmt1[0], fmt2)])\n        );\n\n      case 16:\n        return (\n          /* Theta */\n          Block.__(16, [concat_fmt(fmt1[0], fmt2)])\n        );\n\n      case 17:\n        return (\n          /* Formatting_lit */\n          Block.__(17, [fmt1[0], concat_fmt(fmt1[1], fmt2)])\n        );\n\n      case 18:\n        return (\n          /* Formatting_gen */\n          Block.__(18, [fmt1[0], concat_fmt(fmt1[1], fmt2)])\n        );\n\n      case 19:\n        return (\n          /* Reader */\n          Block.__(19, [concat_fmt(fmt1[0], fmt2)])\n        );\n\n      case 20:\n        return (\n          /* Scan_char_set */\n          Block.__(20, [fmt1[0], fmt1[1], concat_fmt(fmt1[2], fmt2)])\n        );\n\n      case 21:\n        return (\n          /* Scan_get_counter */\n          Block.__(21, [fmt1[0], concat_fmt(fmt1[1], fmt2)])\n        );\n\n      case 22:\n        return (\n          /* Scan_next_char */\n          Block.__(22, [concat_fmt(fmt1[0], fmt2)])\n        );\n\n      case 23:\n        return (\n          /* Ignored_param */\n          Block.__(23, [fmt1[0], concat_fmt(fmt1[1], fmt2)])\n        );\n\n      case 24:\n        return (\n          /* Custom */\n          Block.__(24, [fmt1[0], fmt1[1], concat_fmt(fmt1[2], fmt2)])\n        );\n    }\n  }\n}\n\nexport { concat_fmtty, erase_rel, concat_fmt };\n/* No side effect */","map":{"version":3,"sources":["/Users/bg/benzguo/memopub/node_modules/bs-platform/lib/es6/camlinternalFormatBasics.js"],"names":["Block","erase_rel","param","tag","__","ty1","concat_fmtty","fmtty1","fmtty2","concat_fmt","fmt1","fmt2"],"mappings":"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","sourcesContent":["\n\nimport * as Block from \"./block.js\";\n\nfunction erase_rel(param) {\n  if (typeof param === \"number\") {\n    return /* End_of_fmtty */0;\n  } else {\n    switch (param.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [erase_rel(param[0])]);\n      case 1 : \n          return /* String_ty */Block.__(1, [erase_rel(param[0])]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [erase_rel(param[0])]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [erase_rel(param[0])]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [erase_rel(param[0])]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [erase_rel(param[0])]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [erase_rel(param[0])]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [erase_rel(param[0])]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    param[0],\n                    erase_rel(param[1])\n                  ]);\n      case 9 : \n          var ty1 = param[0];\n          return /* Format_subst_ty */Block.__(9, [\n                    ty1,\n                    ty1,\n                    erase_rel(param[2])\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [erase_rel(param[0])]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [erase_rel(param[0])]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [erase_rel(param[0])]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [erase_rel(param[0])]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [erase_rel(param[0])]);\n      \n    }\n  }\n}\n\nfunction concat_fmtty(fmtty1, fmtty2) {\n  if (typeof fmtty1 === \"number\") {\n    return fmtty2;\n  } else {\n    switch (fmtty1.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 1 : \n          return /* String_ty */Block.__(1, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    fmtty1[0],\n                    concat_fmtty(fmtty1[1], fmtty2)\n                  ]);\n      case 9 : \n          return /* Format_subst_ty */Block.__(9, [\n                    fmtty1[0],\n                    fmtty1[1],\n                    concat_fmtty(fmtty1[2], fmtty2)\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [concat_fmtty(fmtty1[0], fmtty2)]);\n      \n    }\n  }\n}\n\nfunction concat_fmt(fmt1, fmt2) {\n  if (typeof fmt1 === \"number\") {\n    return fmt2;\n  } else {\n    switch (fmt1.tag | 0) {\n      case 0 : \n          return /* Char */Block.__(0, [concat_fmt(fmt1[0], fmt2)]);\n      case 1 : \n          return /* Caml_char */Block.__(1, [concat_fmt(fmt1[0], fmt2)]);\n      case 2 : \n          return /* String */Block.__(2, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 3 : \n          return /* Caml_string */Block.__(3, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 4 : \n          return /* Int */Block.__(4, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 5 : \n          return /* Int32 */Block.__(5, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 6 : \n          return /* Nativeint */Block.__(6, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 7 : \n          return /* Int64 */Block.__(7, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 8 : \n          return /* Float */Block.__(8, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 9 : \n          return /* Bool */Block.__(9, [concat_fmt(fmt1[0], fmt2)]);\n      case 10 : \n          return /* Flush */Block.__(10, [concat_fmt(fmt1[0], fmt2)]);\n      case 11 : \n          return /* String_literal */Block.__(11, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 12 : \n          return /* Char_literal */Block.__(12, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 13 : \n          return /* Format_arg */Block.__(13, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 14 : \n          return /* Format_subst */Block.__(14, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 15 : \n          return /* Alpha */Block.__(15, [concat_fmt(fmt1[0], fmt2)]);\n      case 16 : \n          return /* Theta */Block.__(16, [concat_fmt(fmt1[0], fmt2)]);\n      case 17 : \n          return /* Formatting_lit */Block.__(17, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 18 : \n          return /* Formatting_gen */Block.__(18, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 19 : \n          return /* Reader */Block.__(19, [concat_fmt(fmt1[0], fmt2)]);\n      case 20 : \n          return /* Scan_char_set */Block.__(20, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 21 : \n          return /* Scan_get_counter */Block.__(21, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 22 : \n          return /* Scan_next_char */Block.__(22, [concat_fmt(fmt1[0], fmt2)]);\n      case 23 : \n          return /* Ignored_param */Block.__(23, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 24 : \n          return /* Custom */Block.__(24, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      \n    }\n  }\n}\n\nexport {\n  concat_fmtty ,\n  erase_rel ,\n  concat_fmt ,\n  \n}\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}